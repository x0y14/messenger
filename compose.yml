services:
  envoy:
    build:
      context: ./proxy
    container_name: envoy-grpc-proxy
    ports:
      - "9090:9090"
    networks:
      - internal

  db:
    image: postgres:14
    container_name: msg-db
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./db/script:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_DB=$POSTGRES_DB

  pulsar:
    image: apachepulsar/pulsar:2.9.1
    container_name: msg-pulsar-dev
    ports:
      - "6650:6650"
      - "8080:8080"
    command: bin/pulsar standalone
    volumes:
      - type: volume
        source: pulsardata
        target: "/pulsar/data"
      - type: volume
        source: pulsarconf
        target: "/pulsar/conf"

  idgen:
    image: messenger-idgen
    build:
      context: .
      dockerfile: ./idgen/Dockerfile
    container_name: msg-idgen-dev
    expose:
      - "3030"
    networks:
      - internal

  blob-storage:
    image: messenger-blob-storage
    build:
      context: .
      dockerfile: ./blob/Dockerfile
    container_name: msg-blob-dev
    volumes:
      - ./blob/storage:/usr/local/app/storage
    ports:
      - "4040:4040"
    networks:
      - internal

  talk:
    image: messenger-talk
    build:
      context: .
      dockerfile: ./grpc/talk/Dockerfile-slim
    container_name: msg-talk-dev
    ports:
      - "50050:50050"
    networks:
      - internal

  op:
    image: messenger-op
    build:
      context: .
      dockerfile: ./grpc/op/Dockerfile
    container_name: msg-op-dev
    expose:
      - "50051"
    ports:
      - "50051:50051"
    networks:
      - internal

networks:
  internal: { }

volumes:
  pulsardata:
  pulsarconf:
  db-data: